[{"C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\index.js":"1","C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\App.jsx":"2","C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\context\\AuthProvider.jsx":"3","C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\utils\\index.js":"4","C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\pages\\index.js":"5","C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\components\\index.js":"6","C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\utils\\notify.js":"7","C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\utils\\PrivateRoutes.jsx":"8","C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\pages\\RegisterPage\\RegisterPage.jsx":"9","C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\pages\\LoginPage\\LoginPage.jsx":"10","C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\pages\\ForgotPasswordPage\\ForgotPasswordPage.jsx":"11","C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\pages\\PasswordResetPage\\PasswordResetPage.jsx":"12","C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\components\\ProfileModal\\ProfileModal.jsx":"13","C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\components\\NavigationBar\\NavigationBar.jsx":"14","C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\assets\\index.js":"15","C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\pages\\MainPage\\Main.jsx":"16","C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\pages\\HomePage\\HomePage.jsx":"17"},{"size":489,"mtime":1690277045089,"results":"18","hashOfConfig":"19"},{"size":1470,"mtime":1690305351913,"results":"20","hashOfConfig":"19"},{"size":761,"mtime":1690277045623,"results":"21","hashOfConfig":"19"},{"size":106,"mtime":1690277046289,"results":"22","hashOfConfig":"19"},{"size":421,"mtime":1690295943840,"results":"23","hashOfConfig":"19"},{"size":145,"mtime":1690277045370,"results":"24","hashOfConfig":"19"},{"size":955,"mtime":1690277046337,"results":"25","hashOfConfig":"19"},{"size":501,"mtime":1690277046238,"results":"26","hashOfConfig":"19"},{"size":7407,"mtime":1690286600577,"results":"27","hashOfConfig":"19"},{"size":12553,"mtime":1690434302922,"results":"28","hashOfConfig":"19"},{"size":2873,"mtime":1690439234927,"results":"29","hashOfConfig":"19"},{"size":4281,"mtime":1690439256213,"results":"30","hashOfConfig":"19"},{"size":1056,"mtime":1690277045560,"results":"31","hashOfConfig":"19"},{"size":2697,"mtime":1690303424023,"results":"32","hashOfConfig":"19"},{"size":296,"mtime":1690277045232,"results":"33","hashOfConfig":"19"},{"size":3348,"mtime":1690306163749,"results":"34","hashOfConfig":"19"},{"size":1188,"mtime":1690202669626,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1w6lfu7",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\index.js",[],[],[],"C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\App.jsx",[],[],"C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\context\\AuthProvider.jsx",[],[],"C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\utils\\index.js",[],[],"C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\pages\\index.js",[],[],"C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\components\\index.js",[],[],"C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\utils\\notify.js",[],[],"C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\utils\\PrivateRoutes.jsx",[],[],"C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\pages\\RegisterPage\\RegisterPage.jsx",["89"],[],"import { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Form, Button, Spinner, Image } from \"react-bootstrap\";\n\nimport { AuthState } from \"../../context/AuthProvider\";\nimport { Notify } from \"../../utils\";\nimport IMAGES from \"../../assets\";\n\nconst RegisterPage = () => {\n  const [credentials, setCredentials] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    // profilePic: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [imagePreview, setimagePreview] = useState(IMAGES.user); // Default image for preview\n\n  const navigate = useNavigate();\n  const { setAuth } = AuthState();\n\n  const handleCredentials = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n\n  const handleProfilePic = async (e) => {\n    setIsLoading(true);\n    const profilePic = e.target.files[0]; // Get the file\n\n    // Check file type\n    if (\n      profilePic.type !== \"image/jpeg\" &&\n      profilePic.type !== \"image/jpg\" &&\n      profilePic.type !== \"image/png\"\n    ) {\n      e.target.value = null; // Clear upload field\n      setimagePreview(IMAGES.user);\n      setIsLoading(false);\n      return Notify(\"Only .jpeg, .jpg and .png supported\", \"warn\");\n    }\n\n    // Check file size\n    if (profilePic.size > 1 * 1024 * 1024) {\n      e.target.value = null; // Clear upload field\n      setimagePreview(IMAGES.user);\n      setIsLoading(false);\n      return Notify(\"Please upload image under 1 MB\", \"warn\");\n    }\n\n    // Save the image in FormData object\n    const formData = new FormData();\n    formData.append(\"file\", profilePic); // Contains the file\n    formData.append(\n      \"upload_preset\",\n      `${process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET}`\n    ); // Upload preset in Cloudinary\n    formData.append(\n      \"cloud_name\",\n      `${process.env.REACT_APP_CLOUDINARY_CLOUD_NAME}`\n    ); // Cloud name in Cloudinary\n\n    try {\n      // Upload image to cloudinary if user selected an image\n      const cloudinaryResponse = await fetch(\n        `http://localhost:5000/api/auth/register`,\n        {\n          method: \"POST\",\n          body: formData,\n        }\n      );\n      const cloudinaryData = await cloudinaryResponse.json();\n\n      // If profile pic is uploaded, set the image URL for registration\n      setCredentials({\n        ...credentials,\n        profilePic: cloudinaryData.secure_url.toString(),\n      });\n\n      // Image preview logic\n      const reader = new FileReader();\n      reader.readAsDataURL(profilePic);\n      reader.onload = () => setimagePreview(reader.result);\n\n      setIsLoading(false);\n      return Notify(\"Profile pictute uploaded\", \"success\");\n    } catch (error) {\n      e.target.value = null; // Clear upload field\n      setimagePreview(IMAGES.user);\n      setIsLoading(false);\n      return Notify(\"Internal server error\", \"error\");\n    }\n  };\n\n  const registerHandler = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    // If any field is missing\n    if (\n      !credentials.name ||\n      !credentials.email ||\n      !credentials.password ||\n      !credentials.confirmPassword\n    ) {\n      setIsLoading(false);\n      return Notify(\"Please Fill all the Feilds\", \"warn\");\n    }\n\n    // If password and confirm password doesn't match\n    if (credentials.password !== credentials.confirmPassword) {\n      setIsLoading(false);\n      return Notify(\"Passwords Do Not Match\", \"warn\");\n    }\n\n    // If password is less than 8 characters\n    if (credentials.password.length < 8) {\n      setIsLoading(false);\n      return Notify(\"Password must be at least 8 characters\", \"warn\");\n    }\n\n    try {\n      // Register user\n      const response = await fetch(\"/api/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          name: credentials.name,\n          email: credentials.email,\n          password: credentials.password,\n          profilePic: credentials.profilePic,\n        }),\n      });\n      const data = await response.json();\n\n      if (data.success) {\n        localStorage.setItem(\"auth\", JSON.stringify(data)); // Save auth details in local storage\n        setAuth(data);\n        setIsLoading(false);\n        navigate(\"/\"); // Go to home page\n        return Notify(\"Your account has been successfully created\", \"success\");\n      } else {\n        setIsLoading(false);\n        return Notify(data.error, \"error\");\n      }\n    } catch (error) {\n      setIsLoading(false);\n      return Notify(\"Internal server error\", \"error\");\n    }\n  };\n\n  return (\n    <Form className=\"auth__form\" onSubmit={registerHandler}>\n      <h2 className=\"text-center mb-5\">Create new account</h2>\n\n      <Form.Group className=\"mb-3 d-flex justify-content-center\">\n        <Image\n          id=\"profilePicUpload\"\n          src={imagePreview}\n          alt=\"Profile image\"\n          draggable=\"false\"\n          roundedCircle\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"name\">\n        <Form.Label>Full Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"name\"\n          tabIndex=\"1\"\n          placeholder=\"Full name\"\n          value={credentials.name}\n          onChange={(e) => handleCredentials(e)}\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"email\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          type=\"email\"\n          name=\"email\"\n          tabIndex=\"2\"\n          placeholder=\"Enter email\"\n          value={credentials.email}\n          onChange={(e) => handleCredentials(e)}\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"password\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          name=\"password\"\n          tabIndex=\"3\"\n          placeholder=\"Password\"\n          value={credentials.password}\n          onChange={(e) => handleCredentials(e)}\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          name=\"confirmPassword\"\n          tabIndex=\"4\"\n          placeholder=\"Confirm password\"\n          value={credentials.confirmPassword}\n          onChange={(e) => handleCredentials(e)}\n        />\n      </Form.Group>\n\n      {/* <Form.Group controlId=\"profilePic\" className=\"mb-3\">\n        <Form.Label>Upload profile picture</Form.Label>\n        <Form.Control\n          type=\"file\"\n          accept=\"image/jpeg, image/jpg, image/png\"\n          name=\"profilePic\"\n          tabIndex=\"5\"\n          size=\"sm\"\n          onChange={(e) => handleProfilePic(e)}\n        />\n      </Form.Group> */}\n\n      <Button\n        tabIndex=\"6\"\n        variant=\"success\"\n        type=\"submit\"\n        className=\"mb-3\"\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner animation=\"border\" role=\"status\" size=\"sm\" />\n        ) : (\n          \"Create Account\"\n        )}\n      </Button>\n\n      <Form.Group className=\"mb-3 text-center\" controlId=\"register\">\n        <span>\n          Already have an account?&nbsp;\n          <Link to=\"/login\" tabIndex=\"6\" className=\"text-decoration-none\">\n            Log in\n          </Link>\n        </span>\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default RegisterPage;\n","C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\pages\\LoginPage\\LoginPage.jsx",[],[],"C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\pages\\ForgotPasswordPage\\ForgotPasswordPage.jsx",[],[],"C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\pages\\PasswordResetPage\\PasswordResetPage.jsx",[],[],"C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\components\\ProfileModal\\ProfileModal.jsx",[],[],"C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\components\\NavigationBar\\NavigationBar.jsx",[],[],"C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\assets\\index.js",[],[],"C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\pages\\MainPage\\Main.jsx",[],[],"C:\\Users\\jithu\\OneDrive\\Desktop\\mern-stack-authentication-boilerplate-main\\client\\src\\pages\\HomePage\\HomePage.jsx",[],["90"],{"ruleId":"91","severity":1,"message":"92","line":27,"column":9,"nodeType":"93","messageId":"94","endLine":27,"endColumn":25},{"ruleId":"95","severity":1,"message":"96","line":41,"column":6,"nodeType":"97","endLine":41,"endColumn":8,"suggestions":"98","suppressions":"99"},"no-unused-vars","'handleProfilePic' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPrivateDate'. Either include it or remove the dependency array.","ArrayExpression",["100"],["101"],{"desc":"102","fix":"103"},{"kind":"104","justification":"105"},"Update the dependencies array to be: [fetchPrivateDate]",{"range":"106","text":"107"},"directive","",[1113,1115],"[fetchPrivateDate]"]